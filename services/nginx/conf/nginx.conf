# Main Nginx configuration file

worker_processes 1;  # Use a single worker process for handling requests

events {
    worker_connections 1024;  # Allow up to 1024 connections per worker
}

http {

    log_format debug_log '$remote_addr - $remote_user [$time_local] "$request" '
                     'headers: $http_user_agent, cookies: $http_cookie '
                     'body: $request_body';

    access_log /var/log/nginx/access_debug.log debug_log;
    error_log /var/log/nginx/error.log debug;


    include mime.types;  # Include the MIME types file
	default_type application/octet-stream;  # Default MIME type for unknown file types

	sendfile on;  # Enable sendfile for improved file transfer performance
	keepalive_timeout 65;  # Keep connections open for up to 65 seconds
    
	# Upstream configuration for auth service
    upstream auth_service {
        server auth:8001;
    }

	upstream websocket {
		server websocket:8002;
	}

    #redirigir todas las peticiones HTTP a HTTPS
    server {
        listen 80;
        server_name localhost;

        return 301 https://$host:8443$request_uri;
    }

	upstream tournament_service {
        server tournaments:8003;
    }

    upstream game_drf_service {
        server game_drf:8004;
    }

    upstream game_daphne_service {
        server game_daphne:8005;
    }


	server {

        listen 443 ssl;           # Escuchar en IPv4
        listen [::]:443 ssl;      # Escuchar en IPv6  
        
        server_name localhost;  # Server name, often used for domain-based routing

        ssl_certificate /etc/nginx/ssl/pmv.crt;
        ssl_certificate_key /etc/nginx/ssl/pmv.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Página de error personalizada
        location /unauthorized {
            return 401 '{"error": "Unauthorized"}';  # Devuelve un mensaje de error en formato JSON
            default_type application/json;
        }

		location / {
			root /usr/share/nginx/html;  # Serve static files from the /usr/share/nginx/html directory
			index index.html;  # Use index.html as the default index file
			#try_files $uri $uri/ /index.html;  
		}
		location /media {
			alias /media;  # Serve static files from the /usr/share/nginx/html directory
			autoindex on;
            #try_files $uri $uri/ /index.html;  
		}

		location /ws/ {
            
            auth_request /api/usr/validateToken;  # Endpoint interno para validar el token
            error_page 401 = /unauthorized;  # Manejo de errores de autenticación

            # Si la autenticación pasa, maneja la conexión WebSocket
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location ~ ^/api/settings/(.*)$ {
            set $endpoint $1;  # set de endpoint to var

            #auth_request /api/usr/validateToken;  # Endpoint interno para validar el token
            #error_page 401 = /unauthorized;  # Manejo de errores de autenticación
            
            proxy_pass http://auth_service/$endpoint;  # pass to auth_service/ + endpoint
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/usr/(.*)$ {
            set $endpoint $1;  # set de endpoint to var

            proxy_pass http://auth_service/$endpoint;  # pass to auth_service/ + endpoint
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # # # Routing for /game endpoint
        location /api/game/ {

            auth_request /api/usr/validateToken;  # Endpoint interno para validar el token
            error_page 401 = /unauthorized;  # Manejo de errores de autenticación

            rewrite ^/api/game/(.*)$ /$1 break;
            proxy_pass http://game_drf_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws/game/ {

            auth_request /api/usr/validateToken;  # Endpoint interno para validar el token
            error_page 401 = /unauthorized;  # Manejo de errores de autenticación

            proxy_pass http://game_daphne_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # # Routing for /tournament endpoint
        location /api/tournament/ {

			auth_request /api/usr/validateToken;  # Endpoint interno para validar el token
            error_page 401 = /unauthorized;  # Manejo de errores de autenticación

            rewrite ^/api/tournament/(.*)$ /$1 break;
            proxy_pass http://tournament_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/blockchain/ {

            auth_request /api/usr/validateToken; 
            error_page 401 = /unauthorized;  

            rewrite ^/api/blockchain/(.*)$ /$1 break;
            proxy_pass http://blockchain:8006;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # # Routing for /stats endpoint
        # location /stats/ {
        #     proxy_pass http://stats:8004;  # Forward to the stats service on port 8004
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        # }
    }
}
