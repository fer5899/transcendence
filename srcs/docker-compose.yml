volumes:

  user-srcs:
    name: user-srcs
    driver: local
    driver_opts:
      device: ./requirements/user/src
      o : bind
      type : none

  tournament-srcs:
    name: tournament-srcs
    driver: local
    driver_opts:
      device: ./requirements/tournament/src
      o : bind
      type : none


networks:

  microservices:
    name: microservices


services:

  user-db:
    image: postgres:17
    container_name: user-db
    volumes:
      - ./requirements/user/data:/var/lib/postgresql/data
    env_file :
      - .env
    networks :
      - microservices
    shm_size: 128mb
    restart: always

  user-drf:
    image: user-drf:fgomez-d
    container_name: user-drf
    build: ./requirements/user
    volumes:
      - user-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - user-db
      - message-broker
    ports:
      - 8001:8000
    restart: always
    command: [/bin/sh, drf_startup.sh]

  user-celery:
    image: user-celery:fgomez-d
    container_name: user-celery
    build: ./requirements/user
    volumes:
      - user-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - user-db
      - message-broker
    restart: always
    command: [/bin/sh, celery_startup.sh]

  tournament-db:
    image: postgres:17
    container_name: tournament-db
    volumes:
      - ./requirements/tournament/data:/var/lib/postgresql/data
    env_file :
      - .env
    networks :
      - microservices
    shm_size: 128mb
    restart: always

  tournament-drf:
    image: tournament-drf:fgomez-d
    container_name: tournament-drf
    build: ./requirements/tournament
    volumes:
      - tournament-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - tournament-db
      - message-broker
    ports:
      - 8002:8000
    restart: always
    command: [/bin/sh, drf_startup.sh]

  tournament-celery:
    image: tournament-celery:fgomez-d
    container_name: tournament-celery
    build: ./requirements/tournament
    volumes:
      - tournament-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - tournament-db
      - message-broker
    restart: always
    command: [/bin/sh, celery_startup.sh]

  message-broker:
    image: rabbitmq:4-management-alpine
    container_name: message-broker
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./requirements/message_broker/data:/var/lib/rabbitmq
        - ./requirements/message_broker/log:/var/log/rabbitmq
    networks:
      - microservices
    restart: always

  nginx:
    image: nginx:fgomez-d
    container_name: nginx
    build: ./requirements/api_gateway
    ports:
      - "4443:443"
    depends_on:
      - user-drf
      - tournament-drf

    volumes:
      - ./requirements/api_gateway/conf/jwt_validation.lua:/etc/nginx/lua/jwt_validation.lua              
      - ./requirements/api_gateway/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf

    networks:
      - microservices
    restart: always
